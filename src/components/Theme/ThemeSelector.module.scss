@use '@styles/variables' as *;
@use '@styles/mixins' as *;

.themeSelector {
  display: flex;
  flex-direction: column;
  gap: $spacing-lg;
  position: relative;
}

.section {
  display: flex;
  flex-direction: column;
  gap: $spacing-md;
}

.sectionTitle {
  font-size: $font-size-base;
  font-weight: 600;
  color: var(--color-text);
}

.themeGrid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: $spacing-sm;
}

.themeCard {
  position: relative;
  background: var(--color-background);
  border: 2px solid var(--color-border);
  border-radius: $border-radius;
  padding: $spacing-sm;
  cursor: pointer;
  transition: all $transition-fast;

  &:hover {
    border-color: var(--color-primary);
    transform: translateY(-2px);
    box-shadow: $shadow-small;
  }

  &.selected {
    border-color: var(--color-primary);
    background: var(--color-accent);
  }
}

.colorPreview {
  display: flex;
  gap: 2px;
  height: 40px;
  border-radius: $border-radius-small;
  overflow: hidden;
  margin-bottom: $spacing-sm;
}

.colorBar {
  flex: 1;
}

.themeName {
  font-size: $font-size-small;
  font-weight: 500;
  color: var(--color-text);
  text-align: center;
}

.themeActions {
  position: absolute;
  top: 4px;
  right: 4px;
  display: flex;
  gap: 4px;
  opacity: 0;
  transition: opacity $transition-fast;

  .themeCard:hover & {
    opacity: 1;
  }
}

.editTheme,
.deleteTheme {
  width: 24px;
  height: 24px;
  border: none;
  background: rgba(255, 255, 255, 0.95);
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--color-text-secondary);
  transition: all $transition-fast;
  font-size: 14px;

  &:hover {
    background: var(--color-accent);
    transform: scale(1.1);
  }
}

.editTheme:hover {
  color: var(--color-primary);
}

.deleteTheme:hover {
  background: #FFE4E1;
  color: #FF6B6B;
}

.createButton {
  width: 100%;
  padding: $spacing-sm $spacing-md;
  border: 2px dashed var(--color-primary);
  background: transparent;
  border-radius: $border-radius;
  cursor: pointer;
  font-size: $font-size-base;
  font-weight: 500;
  color: var(--color-primary);
  transition: all $transition-fast;

  &:hover {
    background: var(--color-accent);
    border-style: solid;
  }
}

.customForm {
  background: var(--color-background);
  padding: $spacing-lg;
  border-radius: $border-radius;
  position: relative;
  overflow: visible;
}

.formTitle {
  font-size: $font-size-large;
  font-weight: 600;
  color: var(--color-text);
  margin-bottom: $spacing-md;
}

.formGroup {
  margin-bottom: $spacing-md;

  label {
    display: block;
    font-size: $font-size-small;
    font-weight: 500;
    color: var(--color-text-secondary);
    margin-bottom: $spacing-xs;
  }

  input {
    width: 100%;
    padding: $spacing-sm;
    border: 1px solid var(--color-border);
    border-radius: $border-radius-small;
    font-size: $font-size-base;
    color: var(--color-text);
    background: var(--color-surface);

    &:focus {
      outline: none;
      border-color: var(--color-primary);
    }
  }
}

.previewToggle {
  margin-bottom: $spacing-md;
  padding: $spacing-md;
  background: var(--color-accent);
  border-radius: $border-radius-small;
  display: flex;
  flex-direction: column;
  gap: $spacing-xs;

  .previewLabel {
    display: flex;
    align-items: center;
    gap: $spacing-sm;
    font-size: $font-size-base;
    font-weight: $font-weight-medium;
    color: var(--color-text);
    cursor: pointer;

    input[type="checkbox"] {
      width: 20px;
      height: 20px;
      cursor: pointer;
    }
  }

  .previewHint {
    font-size: $font-size-small;
    color: var(--color-text-secondary);
    margin-left: 32px;
  }
}

.colorInputs {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: $spacing-sm;
  margin-bottom: $spacing-lg;
  overflow: visible;
}

.colorInput {
  display: flex;
  flex-direction: column;
  gap: $spacing-xs;

  label {
    font-size: $font-size-small;
    font-weight: 500;
    color: var(--color-text-secondary);
  }
}

.colorControl {
  display: flex;
  gap: $spacing-xs;
  position: relative;
}

.colorButton {
  width: 40px;
  height: 32px;
  border: 2px solid var(--color-border);
  border-radius: $border-radius-small;
  cursor: pointer;
  transition: all $transition-fast;
  position: relative;

  &:hover {
    border-color: var(--color-primary);
    transform: scale(1.05);
  }

  &:active {
    transform: scale(0.95);
  }
}

.colorText {
  flex: 1;
  padding: $spacing-xs;
  border: 1px solid var(--color-border);
  border-radius: $border-radius-small;
  font-size: $font-size-small;
  color: var(--color-text);
  background: var(--color-surface);
  font-family: 'Monaco', 'Menlo', monospace;

  &:focus {
    outline: none;
    border-color: var(--color-primary);
  }
}

.colorPickerPopover {
  position: fixed;
  z-index: 2000;
}

.colorPickerCover {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

// React Colorful 커스텀 스타일
.colorInput {
  :global(.react-colorful) {
    width: 200px;
    height: 200px;
    border-radius: $border-radius;
    box-shadow: $shadow-large;
    border: 2px solid var(--color-border);
    background: var(--color-surface);
  }

  :global(.react-colorful__saturation) {
    border-radius: $border-radius-small;
  }

  :global(.react-colorful__hue) {
    margin-top: 12px;
    height: 12px;
    border-radius: 6px;
  }

  :global(.react-colorful__pointer) {
    width: 20px;
    height: 20px;
    border: 3px solid white;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  }
}

.formActions {
  display: flex;
  gap: $spacing-sm;
}

.cancelButton,
.saveButton {
  flex: 1;
  padding: $spacing-sm $spacing-md;
  border: none;
  border-radius: $border-radius-small;
  cursor: pointer;
  font-size: $font-size-base;
  font-weight: 500;
  transition: all $transition-fast;
}

.cancelButton {
  background: var(--color-surface);
  color: var(--color-text-secondary);
  border: 1px solid var(--color-border);

  &:hover {
    background: var(--color-background);
  }
}

.saveButton {
  background: var(--color-primary);
  color: white;

  &:hover {
    background: var(--color-secondary);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}